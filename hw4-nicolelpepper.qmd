---
title: "Homework Assignment #4"
subtitle: "Marine Aquaculture Suitability by EEZ Zone on West Coast of the U.S."
author: "Nicole Pepper"
date: last-modified
execute: 
  eval: true
  warning: false
  message: false
format:
  html:
    toc: true 
    code-fold: true
editor_options: 
  chunk_output_type: console

---
#### Set up Workspace
```{r}
#| code-fold: true
#| code-summary: "Display Code"

# ---- Load libraries ----
# Load libraries
library(terra)
library(geodata)
library(tidyverse)
library(tmap)
library(kableExtra)
library(spData)
library(spDataLarge)
library(here)
library(viridisLite) 
library(terra)
library(sf)
library(purrr)
library(stars)
library(raster)
library(dplyr)
library(testthat)
library(tigris)
```

#### Read in Project Data:
```{r}
#| code-fold: true
#| code-summary: "Display Code"
#| output: false

# ---- Read in Project Data ----

# Create data folder object
data_folder <- here::here("data")

# Read in sea surface temperature (sst) data & make mean
sst_list <- list.files(data_folder,
                       pattern = "average_annual_sst_\\d{4}\\.tif$",
                       full.names = TRUE)
sst_stack <- lapply(sst_list, rast) %>%
  rast()

# Read in depth data
depth <- rast(here::here("data/depth.tif"))

# Read in EEZ Zones
eez_zones <- st_read(here::here("data/wc_regions_clean.shp"))


# Get US state boundaries from tigris library
states_sf <- tigris::states()

# Filter selected states
west_coast_states <- states_sf[states_sf$NAME %in% c("California", "Oregon", "Nevada", "Washington","Arizona","Idaho","Montana"), ] %>% st_transform(., st_crs(eez_zones))

```

#### Prepare Data
```{r}

# ---- Prepare SST Data ----

# Calculate mean SST
mean_sst <- mean(sst_stack)

# Convert SST from Kelvin to Celsius
mean_sst <- mean_sst - 273.15


# ---- Check CRS of data ----

# Create a warning if the data do not match
if (crs(depth) != crs(mean_sst)) {
  warning("The datasets do not have the same CRS.")
} else {
  message("All datasets are in the same CRS.")
}

# ---- Resample raster data to match resolution and extent ----

# Transform CRS
eez_zones <- st_transform(eez_zones, crs = crs(mean_sst)) 

# Resample depth data to match the resolution of SST with nearest neighbor
depth <- resample(depth, mean_sst, method = "near")

# Crop the resampled depth data to the extent of SST data
depth <- crop(depth, mean_sst, snap = "near")

# ---- Reproject depth to match mean_sst data ----

# Reproject depth layer
depth <- project(depth, crs(mean_sst))

# Create a warning if the data do not match
if (crs(depth) != crs(mean_sst)) {
  warning("The datasets do not have the same CRS.")
} else {
  message("All datasets are in the same CRS.")
}

# Stack data
data_stack <- c(depth, mean_sst)
names(data_stack) <- c("depth", "mean_sst")

```


Oyster Suitability Conditions:

- sea surface temperature: 11-30°C

- depth: 0-70 meters below sea level

### Oyster Habitat Suitability
```{r}
# ---- Assign suitable sst range ----
    sst <- matrix(c(-Inf, 11, 0,
                  11, 30, 1,
                  30, Inf, 0),
                ncol = 3, byrow = TRUE)
    sst_suitability <- terra::classify(data_stack[["mean_sst"]],
                                       rcl = sst,
                                       include.lowest = TRUE)
      plot(sst_suitability)
      
# ---- Assign suitable depth range ----
    # Assign suitable depth range
  depth <- matrix(c(-Inf, -70, 0,
                        -70, 0, 1,
                       0, Inf, 0),
                       ncol = 3, byrow = TRUE)
    
    depth_suitability <- terra::classify(data_stack[["depth"]],
                                         rcl = depth,
                                         include.lowest = TRUE)

         plot(depth_suitability)

# ---- Combine suitability ----
    
    # Combine SST and depth suitability
    species_suitability <- sst_suitability * depth_suitability
    
   # Separate unsuitable area, reclassify 1 to NA
   species_unsuitable <- species_suitability
   species_unsuitable[species_unsuitable == 1] <- NA 
   
   # Remove unsuitable area, reclassify 0 to NA
   species_suitability[species_suitability == 0] <- NA
   
   # Mask species_suitability to eez zones
   species_suitability <- mask(species_suitability, eez_zones)

# ---- Calculate Suitable Area By EEZ Zones ----

# Create a raster where each cell is it's size (will be used to summarize area)
cell_area <- cellSize(species_suitability, unit = 'km')

# Rasterize eez data by rgn field based on species_suitability resolution and extent
eez_raster <- rasterize(eez_zones, species_suitability, field= 'rgn')

# Mask the eez_raster to the species_suitability area
eez_suitability <- mask(eez_raster, species_suitability)
plot(eez_suitability)

# Calculate the area
eez_suitability_area <- zonal(cell_area, eez_suitability, fun = 'sum') %>%
  rename(suitable_area_km2 = area)

# Join area calcs with the eez_zone dataset
eez_suitability_area <- left_join(eez_zones, eez_suitability_area, by = 'rgn')  

eez_suitability_area$rank <- rank(-eez_suitability_area$suitable_area_km, ties.method = "min")


# ---- Create suitability map ----
eez_suitability_area$rgn_label <- gsub(" ", "\n", eez_suitability_area$rgn)

# Round suitable_area_km to no decimals
eez_suitability_area$suitable_area_km_rounded <- paste(format(round(eez_suitability_area$suitable_area_km), big.mark = ",", scientific = FALSE), "km²")


  tm_shape(species_unsuitable) + 
    tm_raster(palette = "#124D5C",
              legend.show = FALSE) +
  tm_shape(eez_suitability_area) +
    tm_fill(col = "rank",
            palette =  c("#00756D", "#00BFB2", "#6BCFC8", "#B2EFEF", "#CCFFFB"),
            title = "Suitable Area (km²)\n By EEZ Zone",
            border.alpha = 0.8) +
    
  tm_shape(eez_suitability_area) +
    tm_borders(col = "#124D5C",
               lwd = .25) +
# state boarders
  tm_shape(west_coast_states) +
  tm_borders(col = "white",
             alpha = 0.1,
             lwd = .25) +
    
     tm_shape(species_suitability) +
    tm_raster(palette = "yellow",
              labels = "Suitable Area",
              title = '') + 
  
# add labels
tm_shape(eez_suitability_area) +  
  tm_text("rgn_label",
          size = 0.6,
          col = "white",
          shadow = TRUE,
          fontface = "bold",
          ymod = .5) + 
  
# Add rounded suitable area labels
  tm_shape(eez_suitability_area) +
    tm_text("suitable_area_km_rounded",
            size = 0.7,
            col = "yellow",
            shadow = TRUE,
            fontface = "bold",
            ymod = -0.5) + 
  
  tm_layout(main.title = paste("U.S. West Coast\n Oyster Habitat Suitability"),
            main.title.position = c("center", "top"),
            legend.text.color = "white",
            legend.position = c(0.55,0.45),
            legend.title.color = "white",
            legend.title.size = .9,
            bg.color = '#07222B') +

  # Add tick marks 
  tm_grid(lines = FALSE,
          tick = TRUE,
          alpha = 0.8,
          n.x = 5,
          n.y = 5) 
```


### Create a habitat suitability function

| Species | Min Temp | Max Depth | Min Depth |  Max Depth |
|------------------|------------------|-------------------|------------------|------------------|
|Oyster          | 10                       | 20                        | - 40               |  0               | 
| Kelp          | 11                       | 30                         | -70                | 0               | 

```{r}
# ---- Create suitability function ----
habitat_suitability_map <- function(species, min_sst, max_sst, min_depth, max_depth) {

# ---- Assign suitable sst range ----
    sst <- matrix(c(-Inf, min_sst, 0,
                  min_sst, max_sst, 1,
                  max_sst, Inf, 0),
                ncol = 3, byrow = TRUE)
    sst_suitability <- terra::classify(data_stack[["mean_sst"]],
                                       rcl = sst,
                                       include.lowest = TRUE)
# ---- Assign suitable depth range ----
    # Assign suitable depth range
  depth <- matrix(c(-Inf, min_depth, 0,
                        min_depth, max_depth, 1,
                       max_depth, Inf, 0),
                       ncol = 3, byrow = TRUE)
    
    depth_suitability <- terra::classify(data_stack[["depth"]],
                                         rcl = depth,
                                         include.lowest = TRUE)

# ---- Combine suitability ----
    
    # Combine SST and depth suitability
    species_suitability <- sst_suitability * depth_suitability
    
   # Separate unsuitable area, reclassify 1 to NA
   species_unsuitable <- species_suitability
   species_unsuitable[species_unsuitable == 1] <- NA 
   
   # Remove unsuitable area, reclassify 0 to NA
   species_suitability[species_suitability == 0] <- NA

# ---- Calculate Suitable Area By EEZ Zones ----

# Create a raster where each cell is it's size (will be used to summarize area)
cell_area <- cellSize(species_suitability, unit = 'km')

# Rasterize eez data by rgn field based on species_suitability resolution and extent
eez_raster <- rasterize(eez_zones, species_suitability, field= 'rgn')

# Mask the eez_raster to the species_suitability area
eez_suitability <- mask(eez_raster, species_suitability)

# Calculate the area.
eez_suitability_area <- zonal(cell_area, eez_suitability, fun = 'sum') %>% rename(suitable_area_km2 = area)

# Join area calcs with the eez_zone dataset
eez_suitability_area <- left_join(eez_zones, eez_suitability_area, by = 'rgn')  


# ---- Create suitability map ----
eez_suitability_area$rgn_label <- gsub(" ", "\n", eez_suitability_area$rgn)

# Round suitable_area_km to no decimals
eez_suitability_area$suitable_area_km_rounded <- paste(format(round(eez_suitability_area$suitable_area_km), big.mark = ",", scientific = FALSE), "km²")


  tm_shape(species_unsuitable) + 
    tm_raster(palette = "#124D5C",
              legend.show = FALSE) +
  tm_shape(eez_suitability_area) +
    tm_fill(col = "suitable_area_km2",
            palette =  c("#00756D", "#00BFB2", "#6BCFC8", "#B2EFEF", "#CCFFFB"),
            title = "Suitable Area (km²)\n By EEZ Zone",
            style = "cont",
            border.alpha = 0.8) +
    
  tm_shape(eez_suitability_area) +
    tm_borders(col = "#124D5C",
               lwd = .25) +
# state boarders
  tm_shape(west_coast_states) +
  tm_borders(col = "white",
             alpha = 0.1,
             lwd = .25) +
    
     tm_shape(species_suitability) +
    tm_raster(palette = "yellow",
              labels = "Suitable Area",
              title = '') + 
  
# add labels
tm_shape(eez_suitability_area) +  
  tm_text("rgn_label",
          size = 0.6,
          col = "white",
          shadow = TRUE,
          fontface = "bold",
          ymod = .5) + 
  
# Add rounded suitable area labels
  tm_shape(eez_suitability_area) +
    tm_text("suitable_area_km_rounded",
            size = 0.7,
            col = "yellow",
            shadow = TRUE,
            fontface = "bold",
            ymod = -0.5) + 
  
  tm_layout(main.title = paste("U.S. West Coast\n",species, "Habitat Suitability"),
            main.title.position = c("center", "top"),
            legend.text.color = "white",
            legend.position = c(0.55,0.45),
            legend.title.color = "white",
            legend.title.size = .9,
            bg.color = '#07222B') +

  # Add tick marks 
  tm_grid(lines = FALSE,
          tick = TRUE,
          alpha = 0.8,
          n.x = 5,
          n.y = 5) 
}

```

```{r}
habitat_suitability_map("Oyster", 11,30,-70,0)

#plot(suitable_kelp_habitat, col = custom_colors)
#plot(eez_zones, add = TRUE, border = "black", lwd = 2) 
```

```{r}
habitat_suitability_map("Kelp", 10,20,-40,0)
```

